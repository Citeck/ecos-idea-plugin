{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Citeck Secret Schema",
  "description": "Schema for Citeck secret configuration files",
  "x-intellij-html-description": "<p>Schema for Citeck secret configuration files</p>\n<ul>\n    <li>Used to define secrets containing confidential data like passwords, tokens or keys</li>\n    <li>Secrets are stored in encrypted form in the database</li>\n</ul>",
  "type": "object",
  "required": [
    "id",
    "type",
    "data"
  ],
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the secret",
      "x-intellij-html-description": "<p>Unique identifier for the secret</p>\n<ul>\n    <li>Must be unique within the system</li>\n    <li>Can be referenced in code via EcosSecrets.getBasicData(id)</li>\n</ul>",
      "pattern": "^[\\w$/-_]+\\w"
    },
    "name": {
      "type": "object",
      "description": "Multilingual name for the secret",
      "properties": {
        "en": {
          "type": "string",
          "description": "English name"
        },
        "ru": {
          "type": "string",
          "description": "Russian name"
        }
      }
    },
    "type": {
      "type": "string",
      "description": "Type of secret",
      "enum": ["BASIC", "TOKEN", "CERTIFICATE"],
      "x-intellij-enum-metadata": {
        "BASIC": "Basic authentication with username and password",
        "TOKEN": "Authentication using a token",
        "CERTIFICATE": "Certificate data with private key and certificate"
      }
    },
    "data": {
      "description": "Secret data that depends on the type",
      "x-intellij-html-description": "<p>Secret data that depends on the secret type:</p>\n<ul>\n    <li><strong>BASIC</strong>: username and password fields</li>\n    <li><strong>TOKEN</strong>: token field</li>\n    <li><strong>CERTIFICATE</strong>: privateKey and certificate fields</li>\n</ul>",
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "(BASIC) Username for authentication"
        },
        "password": {
          "type": "string",
          "description": "(BASIC) Password for authentication"
        },
        "token": {
          "type": "string",
          "description": "(TOKEN) Authentication token value"
        },
        "privateKey": {
          "type": "string",
          "description": "(CERTIFICATE) Private key for authentication"
        },
        "certificate": {
          "type": "string",
          "description": "(CERTIFICATE) Certificate for authentication"
        }
      }
    }
  },
  "allOf": [
    {
      "if": {
        "properties": {
          "type": { "const": "BASIC" }
        }
      },
      "then": {
        "properties": {
          "data": {
            "required": ["username", "password"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "type": { "const": "TOKEN" }
        }
      },
      "then": {
        "properties": {
          "data": {
            "required": ["token"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "type": { "const": "CERTIFICATE" }
        }
      },
      "then": {
        "properties": {
          "data": {
            "required": ["privateKey", "certificate"]
          }
        }
      }
    }
  ]
}